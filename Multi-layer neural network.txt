U = load('MNISTnumImages5000.txt');
V = load('MNISTnumLabels5000.txt');
for g=1:1:5000
    U(g,785+V(g))=1;
    U(g,795)=V(g);
end;
DD=[];
DDD=[];
T=U(1:4000,1:795);
TS=U(4001:5000,1:795);
eta=0.1;
eta2=0.2;
a=1;
b=0;
momen=0.1;
HN=[];
HL=input('Enter number of hidden layer = ');
W=cell(1,HL);
WL=cell(1,HL+1);
HN=784;
count2=0;
for a=1:1:HL
    HNS=input('Enter number of hidden neurons = ');
    HN(end+1)=HNS;
    W{a}=randn(HN(a),HN(a+1));
    W{a}=W{a}';
    WL{a}=W{a};
end;
HN(end+1)=10;
W{end+1}=randn(HN(a+1),10);
W{end}=W{end}';
WL{end}=W{end};
s=cell(1,HL+1);
d=cell(1,HL);
del=zeros(HL);
cr=[];
tr_p=[];
tr_pS=[];
T_S=T(randperm(size(T,1)),:);
sig=cell(1,HL+1);
sum=cell(1,HL+1);
ep=100;
for epoch=1:1:ep
count=0;
for i=1:1:4000
s{1}=[];
for k=1:1:HN(2)
sum{1}=0;
sum{1}=dot(T_S(i,1:HN(1)),W{1}(k,:));
sig{1}=1/(1+exp(-sum{1}));
s{1,1}(k)=sig{1};
end;
for NL=1:1:HL
    s{NL+1}=[];
    for k=1:1:HN(NL+2)
        sum{NL+1}=0;
        sum{NL+1}=dot(s{NL}(1,:),W{NL}(:,k));
        sig{NL+1}=1/(1+exp(-sum{NL+1}));
        s{NL+1}(end+1)=sig{NL+1};
    end;
end;
ER=T_S(i,785:794)-s{end}(1,:);
for z=1:1:HN(end)
    for y=1:1:HN(end-1);
        WL{end}(z,y)=(WL{end}(z,y)*momen)+(ER(z)*s{end}(z)*(1-s{end}(z))*s{end-1}(y)*eta);
    end;
end;
W{end}=W{end}+WL{end};
for LW=HL:-1:1
d{LW}=[];
for y=1:1:HN(LW+1)
    del(LW)=0;
    for z=1:1:HN(LW+2)
        del(LW)=del(LW)+(ER(z)*s{LW+1}(z)*(1-s{LW+1}(z))*W{LW+1}(z,y));
    end;
    d{HL}(end+1)=del(LW);
end;
for y=1:1:HN(LW+1)
    for x=1:1:HN(LW)
        if HL==1
            WL{LW}(y,x)=(WL{LW}(y,x)*momen)+(d{LW}(y)*s{LW}(y)*(1-s{LW}(y))*T_S(i,x)*eta2);
        else
            WL{LW}(y,x)=(WL{LW}(y,x)*momen)+(d{LW}(y)*s{LW}(y)*(1-s{LW}(y))*s{LW-1}(x)*eta2);
        end;
    end;
end;
W{LW}=W{LW}+WL{LW};
end;
if mod(epoch,10)==0 || epoch==1
[m,n]=max(s{end});
[x,y]=max(T_S(i,785:794));
if n==y
count=count+1;
end;
end;
if epoch==ep
    tr_p(end+1)=n-1;
end;
end;
if mod(epoch,10)==0 || epoch==1
cr(end+1)=count;
disp(count)
end;
end;



%TESTING########################################################################################################################



for i=1:1:1000
s{1}=[];
for k=1:1:HN(2)
sum{1}=0;
sum{1}=dot(T_S(i,1:HN(1)),W{1}(k,:));
sig{1}=1/(1+exp(-sum{1}));
s{1,1}(k)=sig{1};
end;
for NL=1:1:HL
    s{NL+1}=[];
    for k=1:1:HN(NL+2)
        sum{NL+1}=0;
        sum{NL+1}=dot(s{NL}(1,:),W{NL}(:,k));
        sig{NL+1}=1/(1+exp(-sum{NL+1}));
        s{NL+1}(end+1)=sig{NL+1};
    end;
end;
[m,n]=max(s{end});
DD(end+1)=n;
[x,y]=max(TS(i,785:794)); 
DDD(end+1)=y; 
if n==y
count2=count2+1;
end;
tr_pS(end+1)=n-1;
end;


tr_p=tr_p';
CM=zeros(10,10);
Error_rate=[];
for r=1:1:ep
Error_rate(r)=1-(cr(r)/4000);
end;
for c =1:1:4000
    CM(T_S(c,795)+1,tr_p(c)+1)=CM(T_S(c,795)+1,tr_p(c)+1)+1;
end;
CM2=zeros(10,10);
for c =1:1:1000
    CM2(TS(c,795)+1,tr_pS(c)+1)=CM2(TS(c,795)+1,tr_pS(c)+1)+1;
end;
qq=[1 10 20 30 40 50 60 70 80 90 100];
plot(qq,Error_rate)
title('Error Rate VS Epochs')
xlabel('Epoch')
ylabel('Error Rate')